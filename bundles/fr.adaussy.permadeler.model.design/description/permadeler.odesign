<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:filter="http://www.eclipse.org/sirius/diagram/description/filter/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="model" version="12.0.0.2017041100">
  <ownedViewpoints name="FoodForestViewPoint" modelFileExtension="*.Permadeler">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='PlantationsMapDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Create%20Plantation%20from%20Sow']" name="PlantationsMapDiagram" label="Plantion Map" domainClass="Permadeler::PlantationPhase" enablePopupBars="true" imagePath="/fr.adaussy.permadeler.model.design/img/plan.png">
      <filters xsi:type="filter:CompositeFilterDescription" name="PMD_TopLayer" label="Only top layer">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='PlantationsMapDiagram']/@defaultLayer/@nodeMappings[name='PMD_Plantation']" semanticConditionExpression="aql:self.currentLayer = Permadeler::Layer::CANOPY or self.currentLayer = Permadeler::Layer::UNDERSTORY"/>
      </filters>
      <defaultLayer name="Default">
        <nodeMappings name="PMD_Plantation" label="Plantation" semanticCandidatesExpression="aql:self.plantations" domainClass="Permadeler::Plantation">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.getPlantationLabel()" labelColor="//@userColorsPalettes[name='DiagramColors']/@entries[name='LabelGray']" tooltipExpression="aql:self.type.name" sizeComputationExpression="aql:self.getSVGSize()" labelPosition="node" resizeKind="NSEW" workspacePath="/fr.adaussy.permadeler.model.design/img/understory.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <labelFormat>bold</labelFormat>
          </style>
        </nodeMappings>
        <toolSections name="CreationSection_Plantations" label="Create">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="PlantationCreationTool" label="Top Plantation" nodeMappings="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='PlantationsMapDiagram']/@defaultLayer/@nodeMappings[name='PMD_Plantation']" iconPath="/fr.adaussy.permadeler.model.edit/icons/bank/icons/019-trowel.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.createPlantation()"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="DndToolPlantationsPlantations">
          <ownedTools xsi:type="tool:ContainerDropDescription" name="Create Plantation from Sow" mappings="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='PlantationsMapDiagram']/@defaultLayer/@nodeMappings[name='PMD_Plantation']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newSemanticContainer.createPlantationFromPlanification(element)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="MenusPlantation">
          <ownedTools xsi:type="tool_1:PopupMenu" name="Background Image">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="DefineBackGroundImage" label="Define Background Image">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.defineBackGroundImage(diagram)"/>
              </initialOperation>
            </menuItemDescription>
            <menuItemDescription xsi:type="tool_1:OperationAction" name="CalibrateBackGroundImage" label="Calibrate Background image">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.calibrateBackgroundImage(diagram)"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='PlantationsMapDiagram']/@defaultLayer/@nodeMappings[name='PMD_Plantation']/@style" attributeName="workspacePath" value="service:getSVGPath()"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='PlantationsMapDiagram']/@defaultLayer/@nodeMappings[name='PMD_Plantation']/@style" attributeName="labelSize" value="aql:self.getLabelSize()"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='PlantationsMapDiagram']/@defaultLayer/@nodeMappings[name='PMD_Plantation']/@style" attributeName="labelPosition" value="aql:self.getLabelPosition()"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='PlantationsMapDiagram']/@defaultLayer/@nodeMappings[name='PMD_Plantation']/@style" attributeName="showIcon" value="aql:self.showIcon()"/>
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@additionalLayers[name='Labels']/@nodeMappings[name='SpeciesItem']/@style"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@toolSections.0/@ownedTools[name='MoveTray']" name="NursaryDiag" domainClass="Permadeler::Nursary" enablePopupBars="true">
      <metamodel href="../../fr.adaussy.permadeler.model/model/Permadeler.ecore#/"/>
      <defaultLayer name="Default">
        <containerMappings name="TrayContainer" deletionDescription="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@toolSections.0/@ownedTools[name='EmptyCellTool']" semanticCandidatesExpression="aql:self.trays" domainClass="Permadeler::Tray" childrenPresentation="VerticalStack">
          <subContainerMappings name="RowContainer" deletionDescription="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@toolSections.0/@ownedTools[name='EmptyCellTool']" semanticCandidatesExpression="feature:eAllContents" domainClass="Permadeler::Row" childrenPresentation="HorizontalStack">
            <subContainerMappings name="CellNode4" deletionDescription="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@toolSections.0/@ownedTools[name='EmptyCellTool']" semanticCandidatesExpression="feature:eAllContents" domainClass="Permadeler::Cell">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="22" showIcon="false" labelExpression="aql:self.name" tooltipExpression="aql:self.getCellToolTip()" sizeComputationExpression="1" labelPosition="node" resizeKind="NSEW" workspacePath="/fr.adaussy.permadeler.model.edit/icons/bank/072-seed.svg">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:FlatContainerStyleDescription" labelSize="12" showIcon="false" labelExpression="" hideLabelByDefault="true">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="" hideLabelByDefault="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="TrayZone" semanticCandidatesExpression="aql:self.zones" domainClass="Permadeler::TrayZone" dropDescriptions="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@toolSections.0/@ownedTools[name='MoveTray']" reusedContainerMappings="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@containerMappings[name='TrayContainer']">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="CreationToolNursary">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="TrayCreationTool" label="Create tray" containerMappings="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@containerMappings[name='TrayContainer']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="Permadeler::Tray" referenceName="trays">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:instance.createTray()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Create Zone" label="Create Zone" containerMappings="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@containerMappings[name='TrayContainer']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="Permadeler::TrayZone" referenceName="zones"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="EmptyCellTool">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.emptyCells()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="MoveTray" mappings="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@containerMappings[name='TrayContainer']" dragSource="BOTH">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="trays" valueExpression="var:element"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@containerMappings[name='TrayContainer']/@subContainerMappings[name='RowContainer']/@subContainerMappings[name='CellNode4']/@style" attributeName="workspacePath" value="service:getSVGPath()"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
      <additionalLayers name="Labels" activeByDefault="true">
        <nodeMappings name="SpeciesItem" semanticCandidatesExpression="aql:self.eAllContents()->filter(Permadeler::Cell)->select(cell | cell.variety &lt;> null)->collect(cell | cell.species)" domainClass="Permadeler::Plant">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.getSpeciesSowLabel()" labelAlignment="LEFT" sizeComputationExpression="5" resizeKind="NSEW" workspacePath="/fr.adaussy.permadeler.model.edit/icons/custo/commons/plant.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="LinkToCell" sourceMapping="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@additionalLayers[name='Labels']/@nodeMappings[name='SpeciesItem']" targetMapping="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@defaultLayer/@containerMappings[name='TrayContainer']/@subContainerMappings[name='RowContainer']/@subContainerMappings[name='CellNode4']" targetFinderExpression="aql:self.getOneCellOfTypeByTray(diagram)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='FoodForestViewPoint']/@ownedRepresentations[name='NursaryDiag']/@additionalLayers[name='Labels']/@nodeMappings[name='SpeciesItem']/@style" attributeName="workspacePath" value="service:getSVGPath()"/>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="fr.adaussy.permadeler.rcp.services.FillService"/>
    <ownedJavaExtensions qualifiedClassName="fr.adaussy.permadeler.rcp.services.MonthService"/>
    <ownedJavaExtensions qualifiedClassName="fr.adaussy.permadeler.rcp.services.LabelService"/>
    <ownedJavaExtensions qualifiedClassName="fr.adaussy.permadeler.rcp.services.ActionsService"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.sirius.ext.emf.edit.EditingDomainServices"/>
    <ownedJavaExtensions qualifiedClassName="fr.adaussy.permadeler.model.design.services.DiagramService"/>
    <ownedJavaExtensions qualifiedClassName="fr.adaussy.permadeler.model.design.services.DateService"/>
  </ownedViewpoints>
  <userColorsPalettes name="DiagramColors">
    <entries xsi:type="description:UserFixedColor" red="249" green="235" blue="210" name="AreaBackground"/>
    <entries xsi:type="description:ComputedColor" name="EffectiveColor" red="aql:self.getEffectiveColor().getRed()" green="aql:self.getEffectiveColor().getGreen()" blue="aql:self.getEffectiveColor().getBlue()"/>
    <entries xsi:type="description:UserFixedColor" red="115" green="115" blue="150" name="LabelGray"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <metamodels href="http://www.example.org/fr.adaussy.permadeler.model#/"/>
    <categories name="Default Category">
      <pages name="Plant" labelExpression="Plant" domainClass="Permadeler::Plant" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.2 //@extensions.0/@categories.0/@groups.8">
        <actions imageExpression="/fr.adaussy.permadeler.model.design/img/image.gif">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Permadeler::Image" referenceName="images">
                <subModelOperations xsi:type="tool_1:Let" variableName="parent" valueExpression="aql:self"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instance">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="title" valueExpression="aql:self.eContainer().eGet('name')"/>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Image URL">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" labelExpression="Web URL" domainClass="Permadeler::Image" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@pages.0/@actions.0/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.1/@subModelOperations.1/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" domainClass="Permadeler::Image" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="Permadeler::Image title" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('title')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('title'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('title').changeable" valueExpression="aql:self.title">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:SetValue" featureName="title" valueExpression="var:newValue"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="Permadeler::Image source" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('source')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('source'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('source').changeable" valueExpression="aql:self.source">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:newValue"/>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="path" valueExpression="aql:'images/'+self.title+self.source.getUrlFileExtension()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.downloadImage(instance)"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </actions>
      </pages>
      <pages name="Plant_Reference_Page" labelExpression="References" domainClass="Permadeler::Plant" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0"/>
      <pages name="ZonePage" labelExpression="Zone" domainClass="Permadeler::Zone" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.5"/>
      <pages name="PlantationPage" labelExpression="Plantation" domainClass="Permadeler::Plantation" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.6"/>
      <pages name="ElementOfTypeSpecies" labelExpression="aql:self.name" domainClass="Permadeler::Species" semanticCandidateExpression="aql:self.type" groups="//@extensions.0/@categories.0/@groups.2 //@extensions.0/@categories.0/@groups.8"/>
      <pages name="SeedItem_Sow" labelExpression="Sow time" domainClass="Permadeler::Species" semanticCandidateExpression="aql:self.type" groups="//@extensions.0/@categories.0/@groups.4"/>
      <pages name="SeedItem_Main" labelExpression="aql:'Seed item'" domainClass="Permadeler::SeedItem" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.7"/>
      <pages name="ReferencePage" labelExpression="Reference" domainClass="Permadeler::Reference" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.1"/>
      <pages name="Plantion_Species" labelExpression="aql:self.name" domainClass="Permadeler::Plant" semanticCandidateExpression="aql:self.type" groups="//@extensions.0/@categories.0/@groups.2 //@extensions.0/@categories.0/@groups.8" indented="true"/>
      <groups name="ReferenceSpeciesGroup" labelExpression="Group" domainClass="Permadeler::Species" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ListDescription" name="RefencesUrl" labelExpression="References" valueExpression="aql:self.references" displayExpression="aql: value.getReferenceLabel()">
          <onClickOperation>
            <firstModelOperations xsi:type="tool_1:Switch">
              <cases conditionExpression="aql:onClickEventKind = 'DOUBLE_CLICK'">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Edit reference">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Default Page" labelExpression="Page" domainClass="Permadeler::Reference" semanticCandidateExpression="var:selection" groups="//@extensions.0/@categories.0/@groups.0/@controls.0/@onClickOperation/@firstModelOperations/@cases.0/@subModelOperations.0/@groups.0"/>
                  <groups name="Default Group" labelExpression="Group" domainClass="Permadeler::Reference" semanticCandidateExpression="var:selection" extends="//@extensions.0/@categories.0/@groups.1"/>
                </subModelOperations>
              </cases>
            </firstModelOperations>
          </onClickOperation>
          <actions labelExpression="Add">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Permadeler::Reference" referenceName="references">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Create a reference">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" labelExpression="Page" domainClass="Permadeler::Reference" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0/@controls.0/@actions.0/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" domainClass="Permadeler::Reference" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.0/@groups.1"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </actions>
          <actions labelExpression="Delete">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:selection">
                <subModelOperations xsi:type="tool_1:Unset" featureName="references" elementExpression="aql:selection"/>
              </firstModelOperations>
            </initialOperation>
          </actions>
        </controls>
      </groups>
      <groups name="ReferenceGroup" labelExpression="Group" domainClass="Permadeler::Reference" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="Permadeler::Reference id" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('id')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('id'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('id').changeable" valueExpression="aql:self.id">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="Permadeler::Reference source" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('source')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('source'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('source').changeable" valueExpression="aql:self.source">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="LinkReference" labelExpression="Link" valueExpression="aql:self.link">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="link" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <actions tooltipExpression="Open in navigator">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.link.toString().openInBrowser()"/>
          </initialOperation>
        </actions>
      </groups>
      <groups name="Permadeler::PlantNamedElement_Group" labelExpression="Name" domainClass="Permadeler::PlantNamedElement" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="Permadeler::Genus name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="Permadeler::Genus description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:ListDescription" name="Permadeler::Genus commonNames" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('commonNames')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('commonNames'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('commonNames').changeable" valueExpression="aql:self.commonNames" displayExpression="var:value">
          <actions labelExpression="Add">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.addSeveralStrings('commonNames','Enter common names (use , to enter multiple value)',',')"/>
            </initialOperation>
          </actions>
          <actions labelExpression="Delete">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eRemoveAll('commonNames',selection)"/>
            </initialOperation>
          </actions>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('commonNames').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:TextDescription" name="Permadeler::Genus latinName" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('latinName')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('latinName'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('latinName').changeable" valueExpression="aql:self.latinName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="latinName" valueExpression="var:newValue"/>
          </initialOperation>
          <conditionalStyles preconditionExpression="aql:self.eClass().getEStructuralFeature('latinName').lowerBound = 1">
            <style>
              <labelFontFormat>bold</labelFontFormat>
            </style>
          </conditionalStyles>
        </controls>
        <controls xsi:type="properties:ButtonDescription" name="SpeciesSetImageText" labelExpression="Image" buttonLabelExpression="aql:self.representationKey">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.selectImage()"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="SpeciesPeriodMonth" label="Months" domainClass="Permadeler::Species" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ListDescription" name="Permadeler::Tree productiveMonths" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('productiveMonths')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('productiveMonths'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('productiveMonths').changeable" valueExpression="aql:self.getMonths('productiveMonths')" displayExpression="var:value">
          <actions labelExpression="Edit">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.editMonthQuarter('productiveMonths','Edit productive weeks')"/>
            </initialOperation>
          </actions>
        </controls>
        <controls xsi:type="properties:ListDescription" name="Permadeler::Tree bloomMonths" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('bloomMonths')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('bloomMonths'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('productiveMonths').changeable" valueExpression="aql:self.getMonths('bloomMonths')" displayExpression="var:value">
          <actions labelExpression="Edit">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.editMonthQuarter('bloomMonths','Edit bloom weeks')"/>
            </initialOperation>
          </actions>
        </controls>
      </groups>
      <groups name="SowPlantGroup" domainClass="Permadeler::Plant" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ListDescription" name="Permadeler::Plant sowIndoorMonths" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('sowIndoorMonths')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('sowIndoorMonths'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('sowIndoorMonths').changeable" valueExpression="aql:self.getMonths('sowIndoorMonths')" displayExpression="var:value">
          <actions labelExpression="Edit">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.editMonthQuarter('sowIndoorMonths','Edit sow inddor weeks')"/>
            </initialOperation>
          </actions>
        </controls>
        <controls xsi:type="properties:ListDescription" name="Permadeler::Plant sowOutdoorMonths" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('sowOutdoorMonths')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('sowOutdoorMonths'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('sowOutdoorMonths').changeable" valueExpression="aql:self.getMonths('sowOutdoorMonths')" displayExpression="var:value">
          <actions labelExpression="Edit">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.editMonthQuarter('sowOutdoorMonths','Edit sow outdoor weeks')"/>
            </initialOperation>
          </actions>
        </controls>
      </groups>
      <groups name="NamedElement" labelExpression="Info" domainClass="Permadeler::NamedElement" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="Permadeler::NamedElement name" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('name')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('name'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="Permadeler::Genus description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="PlantationGroup" labelExpression="Plantation" domainClass="Permadeler::Plantation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextAreaDescription" name="Permadeler::Plantation description" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('description')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('description'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('description').changeable" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="PlantationDate" labelExpression="Plantation Date" valueExpression="aql:self.plantationDate.toLocalDate()">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.setPlantationDate(newValue)"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="Permadeler::Tree rootstock" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('rootstock')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('rootstock'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('rootstock').changeable" valueExpression="aql:self.rootstock">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="rootstock" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:RadioDescription" name="Permadeler::Plantation currentLayer" label="Current Layer" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('currentLayer')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('currentLayer'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('currentLayer').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('currentLayer').eType.getEEnumLiteralByLiteral(self.currentLayer.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('currentLayer').eType.eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="currentLayer" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="SeedItem" labelExpression="Info" domainClass="Permadeler::SeedItem" semanticCandidateExpression="var:self">
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="Permadeler::SeedItem type" referenceNameExpression="aql:'type'"/>
        <controls xsi:type="properties:RadioDescription" name="Permadeler::SeedItem quantity" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('quantity')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('quantity'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('quantity').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('quantity').eType.getEEnumLiteralByLiteral(self.quantity.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('quantity').eType.eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="quantity" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="Permadeler::SeedItem byDate" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('byDate')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('byDate'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('byDate').changeable" valueExpression="aql:self.byDate">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="byDate" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="PlantGroup" labelExpression="Plant" domainClass="Permadeler::Plant" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:RadioDescription" name="Permadeler::Plant foodForestLayer" labelExpression="Strate'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('foodForestLayer'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('foodForestLayer').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('foodForestLayer').eType.getEEnumLiteralByLiteral(self.foodForestLayer.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('foodForestLayer').eType.eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="8">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="foodForestLayer" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:RadioDescription" name="Permadeler::Plant lifeCycle" labelExpression="Cycle de vie" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('lifeCycle'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('lifeCycle').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('lifeCycle').eType.getEEnumLiteralByLiteral(self.lifeCycle.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('lifeCycle').eType.eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="lifeCycle" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="DimensionOwner">
          <controls xsi:type="properties:TextDescription" name="Permadeler::Species height" labelExpression="Hauteur" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('height'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('height').changeable" valueExpression="aql:self.height">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="height" valueExpression="var:newValue"/>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:TextDescription" name="Permadeler::Species width" labelExpression="Largeur" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('width'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('width').changeable" valueExpression="aql:self.width">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="width" valueExpression="var:newValue"/>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2" makeColumnsWithEqualWidth="true"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="SoilTypeGroupOwner" label="Type de sol">
          <controls xsi:type="properties:TextDescription" name="SoilTypeLabel" isEnabledExpression="aql:false" valueExpression="Type de sol">
            <initialOperation/>
          </controls>
          <controls xsi:type="properties:ContainerDescription" name="SoilTypeGroup">
            <controls xsi:type="properties:DynamicMappingForDescription" name="soilTypeFor" iterator="enum" iterableExpression="aql:self.eClass().getEStructuralFeature('soilType').eType.eLiterals">
              <ifs name="enum" predicateExpression="aql:true">
                <widget xsi:type="properties:CheckboxDescription" name="SoilTypeEnumCheckbox" labelExpression="aql:enum.toString()" valueExpression="aql:self.soilType->exists(e | e = enum.instance)">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.modifyList('soilType',enum.instance,newValue)"/>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="7" makeColumnsWithEqualWidth="true"/>
          </controls>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="WindOwner">
          <controls xsi:type="properties:TextDescription" name="WindLabel" isEnabledExpression="aql:false" valueExpression="Tolerance au vent">
            <initialOperation/>
          </controls>
          <controls xsi:type="properties:ContainerDescription" name="WindGroup">
            <controls xsi:type="properties:DynamicMappingForDescription" name="windFor" iterator="enum" iterableExpression="aql:self.eClass().getEStructuralFeature('wind').eType.eLiterals">
              <ifs name="enum" predicateExpression="aql:true">
                <widget xsi:type="properties:CheckboxDescription" name="WindCheckbox" labelExpression="aql:enum.toString()" valueExpression="aql:self.wind->exists(e | e = enum.instance)">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.modifyList('wind',enum.instance,newValue)"/>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="5" makeColumnsWithEqualWidth="true"/>
          </controls>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="SpecialUsesConditionGroupOwner">
          <controls xsi:type="properties:TextDescription" name="SpecialUsesConditionLabel" isEnabledExpression="aql:false" valueExpression="Roles">
            <initialOperation/>
          </controls>
          <controls xsi:type="properties:ContainerDescription" name="SpecialUsesConditionGroup">
            <controls xsi:type="properties:DynamicMappingForDescription" name="EdiblePartFor" iterator="enum" iterableExpression="aql:self.eClass().getEStructuralFeature('specialUses').eType.eLiterals">
              <ifs name="enum" predicateExpression="aql:true">
                <widget xsi:type="properties:CheckboxDescription" name="SpecialUsesEnumCheckbox" labelExpression="aql:enum.toString()" valueExpression="aql:self.specialUses->exists(e | e = enum.instance)">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.modifyList('specialUses',enum.instance,newValue)"/>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="5" makeColumnsWithEqualWidth="true"/>
          </controls>
        </controls>
        <controls xsi:type="properties:RadioDescription" name="Permadeler::Species growRate" labelExpression="Croissance" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('growRate'))" isEnabledExpression="aql:self.eClass().getEStructuralFeature('growRate').changeable" valueExpression="aql:self.eClass().getEStructuralFeature('growRate').eType.getEEnumLiteralByLiteral(self.growRate.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('growRate').eType.eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="growRate" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="MoistureGroupOwner">
          <controls xsi:type="properties:TextDescription" name="MoistureLabel" isEnabledExpression="aql:false" valueExpression="Tolerance humidité">
            <initialOperation/>
          </controls>
          <controls xsi:type="properties:ContainerDescription" name="MoistureGroup">
            <controls xsi:type="properties:DynamicMappingForDescription" name="moistureFor" iterator="enum" iterableExpression="aql:self.eClass().getEStructuralFeature('moisture').eType.eLiterals">
              <ifs name="enum" predicateExpression="aql:true">
                <widget xsi:type="properties:CheckboxDescription" name="MoistureCheckbox" labelExpression="aql:enum.toString()" valueExpression="aql:self.moisture->exists(e | e = enum.instance)">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.modifyList('moisture',enum.instance,newValue)"/>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="7" makeColumnsWithEqualWidth="true"/>
          </controls>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="LightingConditionGroupOwner">
          <controls xsi:type="properties:TextDescription" name="LightingConditionLabel" isEnabledExpression="aql:false" valueExpression="Luminosité">
            <initialOperation/>
          </controls>
          <controls xsi:type="properties:ContainerDescription" name="LightingConditionGroup">
            <controls xsi:type="properties:DynamicMappingForDescription" name="lightingConditionFor" iterator="enum" iterableExpression="aql:self.eClass().getEStructuralFeature('lightingCondition').eType.eLiterals">
              <ifs name="enum" predicateExpression="aql:true">
                <widget xsi:type="properties:CheckboxDescription" name="LightningEnumCheckbox" labelExpression="aql:enum.toString()" valueExpression="aql:self.lightingCondition->exists(e | e = enum.instance)">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.modifyList('lightingCondition',enum.instance,newValue)"/>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2" makeColumnsWithEqualWidth="true"/>
          </controls>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Familly" labelExpression="Famille" valueExpression="aql:self.eClass().getEStructuralFeature('family').eType.getEEnumLiteralByLiteral(self.family.toString())" candidatesExpression="aql:self.eClass().getEStructuralFeature('family').eType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="family" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
